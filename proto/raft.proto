syntax = "proto3";

package raft_gRPC;

message RequestVote {
  uint32 term = 1;
  uint32 candidate_id = 2;
  uint32 last_log_index = 3;
  uint32 last_log_term = 4;
}

message RequestVoteResponse {
  uint32 term = 1;
  bool vote_granted = 2;
}

message AppendEntries {
  uint32 term = 1;
  uint32 leader_id = 2;
  uint32 prev_log_index = 3;
  uint32 prev_log_term = 4;
  string entries = 5;
  uint32 commit_index = 6;
}

message AppendEntriesResponse {
  uint32 term = 1;
  bool success = 2;
}

message ClientRequest {
  string command = 1;
}

message ClientResponse {
  bool success = 1;
  bool redirect = 2;
  uint32 leader_id = 3;
  string data = 4; // Optional response data.
}

message GetClientKeyRange {
  uint64 lower_hash = 1;
  uint64 upper_hash = 2;
}

message ClientKeyRangeResponse {
  bool success = 1;
  // a series of commands
  // that show the state of the keys
  string data = 2;
}

service RaftService {
  rpc HandleVoteRequest(RequestVote) returns (RequestVoteResponse);
  rpc HandleAppendEntries(AppendEntries) returns (AppendEntriesResponse);
  rpc HandleClientRequest(ClientRequest) returns (ClientResponse);
}
